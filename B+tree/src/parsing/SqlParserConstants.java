/* Generated By:JavaCC: Do not edit this line. SqlParserConstants.java */
package parsing;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SqlParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int SELECT = 11;
  /** RegularExpression Id. */
  int INSERT = 12;
  /** RegularExpression Id. */
  int UPDATE = 13;
  /** RegularExpression Id. */
  int DELETE = 14;
  /** RegularExpression Id. */
  int AS = 15;
  /** RegularExpression Id. */
  int ALL = 16;
  /** RegularExpression Id. */
  int SET = 17;
  /** RegularExpression Id. */
  int FROM = 18;
  /** RegularExpression Id. */
  int INTO = 19;
  /** RegularExpression Id. */
  int GROUP_BY = 20;
  /** RegularExpression Id. */
  int ORDER_BY = 21;
  /** RegularExpression Id. */
  int WHERE = 22;
  /** RegularExpression Id. */
  int VALUES = 23;
  /** RegularExpression Id. */
  int DISTINCT = 24;
  /** RegularExpression Id. */
  int IN = 25;
  /** RegularExpression Id. */
  int LBRACKET = 26;
  /** RegularExpression Id. */
  int RBRACKET = 27;
  /** RegularExpression Id. */
  int EQ = 28;
  /** RegularExpression Id. */
  int GT = 29;
  /** RegularExpression Id. */
  int LT = 30;
  /** RegularExpression Id. */
  int NE = 31;
  /** RegularExpression Id. */
  int OR = 32;
  /** RegularExpression Id. */
  int AND = 33;
  /** RegularExpression Id. */
  int LIKE = 34;
  /** RegularExpression Id. */
  int BETWEEN = 35;
  /** RegularExpression Id. */
  int PERCENT = 36;
  /** RegularExpression Id. */
  int AMPERSAND = 37;
  /** RegularExpression Id. */
  int QUOTE = 38;
  /** RegularExpression Id. */
  int LEFT_BRACE = 39;
  /** RegularExpression Id. */
  int RIGHT_BRACE = 40;
  /** RegularExpression Id. */
  int ASTERISK = 41;
  /** RegularExpression Id. */
  int HASH = 42;
  /** RegularExpression Id. */
  int PLUS_SIGN = 43;
  /** RegularExpression Id. */
  int COMMA = 44;
  /** RegularExpression Id. */
  int MINUS_SIGN = 45;
  /** RegularExpression Id. */
  int DOT = 46;
  /** RegularExpression Id. */
  int SOLIDUS = 47;
  /** RegularExpression Id. */
  int COLON = 48;
  /** RegularExpression Id. */
  int DOUBLE_COLON = 49;
  /** RegularExpression Id. */
  int LESS_THAN_OPERATOR = 50;
  /** RegularExpression Id. */
  int NOT_EQUALS_OPERATOR = 51;
  /** RegularExpression Id. */
  int GREATER_THAN_OPERATOR = 52;
  /** RegularExpression Id. */
  int QUESTION_MARK = 53;
  /** RegularExpression Id. */
  int UNDERSCORE = 54;
  /** RegularExpression Id. */
  int VERTICAL_BAR = 55;
  /** RegularExpression Id. */
  int LEFT_BRACKET = 56;
  /** RegularExpression Id. */
  int RIGHT_BRACKET = 57;
  /** RegularExpression Id. */
  int CONCATENATION_OPERATOR = 58;
  /** RegularExpression Id. */
  int FIELD_REFERENCE = 59;
  /** RegularExpression Id. */
  int ELLIPSIS = 60;
  /** RegularExpression Id. */
  int ID = 61;
  /** RegularExpression Id. */
  int NUMBER = 62;
  /** RegularExpression Id. */
  int LETTER = 63;
  /** RegularExpression Id. */
  int DIGIT = 64;
  /** RegularExpression Id. */
  int STRING = 65;
  /** RegularExpression Id. */
  int TEXT = 66;
  /** RegularExpression Id. */
  int STATEMENT_END = 67;
  /** RegularExpression Id. */
  int END = 68;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\f\"",
    "\"//\"",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "<token of kind 10>",
    "\"select\"",
    "\"insert\"",
    "\"update\"",
    "\"delete\"",
    "\"as\"",
    "\"all\"",
    "\"set\"",
    "\"from\"",
    "\"into\"",
    "<GROUP_BY>",
    "<ORDER_BY>",
    "\"where\"",
    "\"values\"",
    "\"distinct\"",
    "\"in\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"or\"",
    "\"and\"",
    "\"like\"",
    "\"between\"",
    "\"%\"",
    "\"&\"",
    "<QUOTE>",
    "\"{\"",
    "\"}\"",
    "\"*\"",
    "\"#\"",
    "\"+\"",
    "\",\"",
    "\"-\"",
    "\".\"",
    "\"/\"",
    "\":\"",
    "\"::\"",
    "\"<\"",
    "\"<>\"",
    "\">\"",
    "\"?\"",
    "\"_\"",
    "\"|\"",
    "\"[\"",
    "\"]\"",
    "\"||\"",
    "\"->\"",
    "\"...\"",
    "<ID>",
    "<NUMBER>",
    "<LETTER>",
    "<DIGIT>",
    "<STRING>",
    "<TEXT>",
    "\";\"",
    "\"!!\"",
  };

}
