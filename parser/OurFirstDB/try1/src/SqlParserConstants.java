/* Generated By:JavaCC: Do not edit this line. SqlParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SqlParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int SELECT = 11;
  /** RegularExpression Id. */
  int INSERT = 12;
  /** RegularExpression Id. */
  int UPDATE = 13;
  /** RegularExpression Id. */
  int DELETE = 14;
  /** RegularExpression Id. */
  int AS = 15;
  /** RegularExpression Id. */
  int ALL = 16;
  /** RegularExpression Id. */
  int SET = 17;
  /** RegularExpression Id. */
  int FROM = 18;
  /** RegularExpression Id. */
  int INTO = 19;
  /** RegularExpression Id. */
  int GROUP_BY = 20;
  /** RegularExpression Id. */
  int ORDER_BY = 21;
  /** RegularExpression Id. */
  int WHERE = 22;
  /** RegularExpression Id. */
  int VALUES = 23;
  /** RegularExpression Id. */
  int DISTINCT = 24;
  /** RegularExpression Id. */
  int LBRACKET = 25;
  /** RegularExpression Id. */
  int RBRACKET = 26;
  /** RegularExpression Id. */
  int EQ = 27;
  /** RegularExpression Id. */
  int GT = 28;
  /** RegularExpression Id. */
  int LT = 29;
  /** RegularExpression Id. */
  int NE = 30;
  /** RegularExpression Id. */
  int OR = 31;
  /** RegularExpression Id. */
  int AND = 32;
  /** RegularExpression Id. */
  int LIKE = 33;
  /** RegularExpression Id. */
  int BETWEEN = 34;
  /** RegularExpression Id. */
  int DOT = 35;
  /** RegularExpression Id. */
  int ID = 36;
  /** RegularExpression Id. */
  int NUMBER = 37;
  /** RegularExpression Id. */
  int LETTER = 38;
  /** RegularExpression Id. */
  int DIGIT = 39;
  /** RegularExpression Id. */
  int STRING = 40;
  /** RegularExpression Id. */
  int STATEMENT_END = 41;
  /** RegularExpression Id. */
  int END = 42;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\f\"",
    "\"//\"",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "<token of kind 10>",
    "\"select\"",
    "\"insert\"",
    "\"update\"",
    "\"delete\"",
    "\"as\"",
    "\"all\"",
    "\"set\"",
    "\"from\"",
    "\"into\"",
    "<GROUP_BY>",
    "<ORDER_BY>",
    "\"where\"",
    "\"values\"",
    "\"distinct\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"or\"",
    "\"and\"",
    "\"like\"",
    "\"between\"",
    "\".\"",
    "<ID>",
    "<NUMBER>",
    "<LETTER>",
    "<DIGIT>",
    "<STRING>",
    "\";\"",
    "\"!!\"",
    "\",\"",
  };

}
